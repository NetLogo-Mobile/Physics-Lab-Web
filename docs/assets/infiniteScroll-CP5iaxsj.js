import{j as h,r as s,w as c,o as I,D as M,K as x,m as S,L as T,O as b}from"./vue-DM6FGnPB.js";import{_ as k}from"./index-D6Hz3-vS.js";const B=h({__name:"infiniteScroll",props:{initialItems:{type:Array,default:()=>[]},hasMore:Boolean,scrollTarget:{type:String,default:null},marginTop:{type:Number,default:-800}},emits:["load"],setup(u,{expose:m,emit:f}){const e=u,d=f,p=s(),n=s(),r=s([...e.initialItems]),a=s(!1),l=s(!e.hasMore);let o;const v=()=>{var t;o=new IntersectionObserver(i=>{i.forEach(g=>{g.isIntersecting&&!a.value&&!l.value&&y()})},{root:e.scrollTarget?document.querySelector(e.scrollTarget):null,rootMargin:"200px",threshold:.1}),n.value&&o.observe(n.value),(t=n.value)==null||t.style.setProperty("margin-top","".concat(e.marginTop,"px"))},y=async()=>{try{a.value=!0,d("load")}finally{a.value=!1}},_=()=>{r.value=[...e.initialItems],l.value=!e.hasMore};return c(()=>e.hasMore,t=>{l.value=!t}),c(()=>e.initialItems,t=>{r.value=[...t]},{deep:!0}),I(v),M(()=>o==null?void 0:o.disconnect()),m({reset:_}),(t,i)=>(b(),x("div",{ref_key:"scrollContainer",ref:p,class:"scroll-container"},[S(t.$slots,"default",{items:r.value},void 0,!0),T("div",{ref_key:"sentinel",ref:n,class:"observer-element"},null,512)],512))}}),O=k(B,[["__scopeId","data-v-f3f52871"]]);export{O as i};
